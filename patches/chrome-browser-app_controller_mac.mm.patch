diff --git a/chrome/browser/app_controller_mac.mm b/chrome/browser/app_controller_mac.mm
index e1e80a20bf14f95a4ea2d37cc6e3614d683b0a9e..c34040e6238d16626933f77addd8daeb9a8ce78e 100644
--- a/chrome/browser/app_controller_mac.mm
+++ b/chrome/browser/app_controller_mac.mm
@@ -10,6 +10,7 @@
 #include <memory>
 #include <vector>
 
+#include "brave/browser/ui/brave_browser.h"
 #include "base/apple/bridging.h"
 #include "base/apple/foundation_util.h"
 #include "base/auto_reset.h"
@@ -743,7 +744,7 @@ class AppControllerNativeThemeObserver : public ui::NativeThemeObserver {
 
 + (AppController*)sharedController {
   static AppController* sharedController = [] {
-    AppController* sharedController = [[AppController alloc] init];
+    AppController* sharedController = [[BraveAppController alloc] init];
     NSApp.delegate = sharedController;
     return sharedController;
   }();
@@ -840,6 +841,22 @@ class AppControllerNativeThemeObserver : public ui::NativeThemeObserver {
 
   // Initialize the Profile menu.
   [self initProfileMenu];
+
+  // Work around a bug in macOS 14. The application name shown in the menu bar
+  // should be the CFBundleName, but a bug in the menu rewrite causes the
+  // CFBundleDisplayName to be swapped in. What's happening here is that the
+  // NSMenuBarDisplayManager registers for a notification that the app name
+  // changed, and then, when the notification comes in, it calls a Process
+  // Manager API that returns the CFBundleDisplayName which is not appropriate
+  // for this use. Work around this by unregistering the NSMenuBarDisplayManager
+  // for the notification. See https://crbug.com/1487224 and FB13192263.
+  if (id sharedMenuBarDisplayManager = [NSClassFromString(
+          @"NSMenuBarDisplayManager") performSelector:@selector(shared)]) {
+    [NSWorkspace.sharedWorkspace.notificationCenter
+        removeObserver:sharedMenuBarDisplayManager
+                  name:@"NSWorkspaceApplicationNameDidChangeNotification"
+                object:nil];
+  }
 }
 
 - (void)unregisterEventHandlers {
@@ -1338,7 +1355,7 @@ class AppControllerNativeThemeObserver : public ui::NativeThemeObserver {
   }
 
   auto it = _profileBookmarkMenuBridgeMap.find(profilePath);
-  if (it != _profileBookmarkMenuBridgeMap.end() &&
+  if (it != _profileBookmarkMenuBridgeMap.end() && !isOffTheRecord &&
       (!base::FeatureList::IsEnabled(features::kDestroyProfileOnBrowserClose) ||
        (it->second->GetProfile() && !isOffTheRecord))) {
     // Clean up the dangling Profile* in |_profileBookmarkMenuBridgeMap|.
@@ -2324,6 +2341,12 @@ void OpenUrlsInBrowserWithProfile(const std::vector<GURL>& urls,
         profile->GetOriginalProfile());
   }
   Browser* browser = chrome::FindLastActiveWithProfile(profile);
+  for (Browser* main_browser : chrome::FindAllBrowsersWithProfile(profile)) {
+    if (static_cast<BraveBrowser*>(main_browser)->is_main_window()) {
+      browser = main_browser;
+      break;
+    }
+  }
   int startupIndex = TabStripModel::kNoTab;
   content::WebContents* startupContent = nullptr;
   if (browser && browser->tab_strip_model()->count() == 1) {
